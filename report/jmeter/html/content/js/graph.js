/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "maxY": 12501.0, "series": [{"data": [[0.0, 23.0], [0.1, 25.0], [0.2, 25.0], [0.3, 25.0], [0.4, 25.0], [0.5, 25.0], [0.6, 25.0], [0.7, 25.0], [0.8, 26.0], [0.9, 26.0], [1.0, 26.0], [1.1, 26.0], [1.2, 26.0], [1.3, 26.0], [1.4, 26.0], [1.5, 26.0], [1.6, 26.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 26.0], [2.1, 26.0], [2.2, 26.0], [2.3, 26.0], [2.4, 26.0], [2.5, 26.0], [2.6, 26.0], [2.7, 26.0], [2.8, 26.0], [2.9, 26.0], [3.0, 26.0], [3.1, 26.0], [3.2, 26.0], [3.3, 26.0], [3.4, 26.0], [3.5, 26.0], [3.6, 27.0], [3.7, 27.0], [3.8, 27.0], [3.9, 27.0], [4.0, 27.0], [4.1, 27.0], [4.2, 27.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 27.0], [6.4, 27.0], [6.5, 27.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 27.0], [7.1, 27.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 28.0], [9.3, 28.0], [9.4, 28.0], [9.5, 28.0], [9.6, 28.0], [9.7, 28.0], [9.8, 28.0], [9.9, 28.0], [10.0, 28.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 28.0], [10.5, 28.0], [10.6, 28.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 28.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 28.0], [15.4, 28.0], [15.5, 28.0], [15.6, 28.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 29.0], [16.8, 29.0], [16.9, 29.0], [17.0, 29.0], [17.1, 29.0], [17.2, 29.0], [17.3, 29.0], [17.4, 29.0], [17.5, 29.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 29.0], [18.2, 29.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 29.0], [19.7, 29.0], [19.8, 29.0], [19.9, 29.0], [20.0, 29.0], [20.1, 29.0], [20.2, 29.0], [20.3, 29.0], [20.4, 29.0], [20.5, 29.0], [20.6, 29.0], [20.7, 29.0], [20.8, 29.0], [20.9, 29.0], [21.0, 29.0], [21.1, 29.0], [21.2, 29.0], [21.3, 29.0], [21.4, 29.0], [21.5, 29.0], [21.6, 29.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 29.0], [23.1, 29.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 29.0], [23.7, 29.0], [23.8, 29.0], [23.9, 29.0], [24.0, 29.0], [24.1, 29.0], [24.2, 29.0], [24.3, 29.0], [24.4, 29.0], [24.5, 29.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 30.0], [25.2, 30.0], [25.3, 30.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 30.0], [26.2, 30.0], [26.3, 30.0], [26.4, 30.0], [26.5, 30.0], [26.6, 30.0], [26.7, 30.0], [26.8, 30.0], [26.9, 30.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 30.0], [27.5, 30.0], [27.6, 30.0], [27.7, 30.0], [27.8, 30.0], [27.9, 30.0], [28.0, 30.0], [28.1, 30.0], [28.2, 30.0], [28.3, 30.0], [28.4, 30.0], [28.5, 30.0], [28.6, 30.0], [28.7, 30.0], [28.8, 30.0], [28.9, 30.0], [29.0, 30.0], [29.1, 30.0], [29.2, 30.0], [29.3, 30.0], [29.4, 30.0], [29.5, 30.0], [29.6, 30.0], [29.7, 30.0], [29.8, 30.0], [29.9, 30.0], [30.0, 30.0], [30.1, 30.0], [30.2, 30.0], [30.3, 30.0], [30.4, 30.0], [30.5, 30.0], [30.6, 30.0], [30.7, 30.0], [30.8, 30.0], [30.9, 30.0], [31.0, 30.0], [31.1, 30.0], [31.2, 30.0], [31.3, 30.0], [31.4, 30.0], [31.5, 30.0], [31.6, 30.0], [31.7, 30.0], [31.8, 30.0], [31.9, 30.0], [32.0, 30.0], [32.1, 30.0], [32.2, 30.0], [32.3, 30.0], [32.4, 30.0], [32.5, 30.0], [32.6, 31.0], [32.7, 31.0], [32.8, 31.0], [32.9, 31.0], [33.0, 31.0], [33.1, 31.0], [33.2, 31.0], [33.3, 31.0], [33.4, 31.0], [33.5, 31.0], [33.6, 31.0], [33.7, 31.0], [33.8, 31.0], [33.9, 31.0], [34.0, 31.0], [34.1, 31.0], [34.2, 31.0], [34.3, 31.0], [34.4, 31.0], [34.5, 31.0], [34.6, 31.0], [34.7, 31.0], [34.8, 31.0], [34.9, 31.0], [35.0, 31.0], [35.1, 31.0], [35.2, 31.0], [35.3, 31.0], [35.4, 31.0], [35.5, 31.0], [35.6, 31.0], [35.7, 31.0], [35.8, 31.0], [35.9, 31.0], [36.0, 31.0], [36.1, 31.0], [36.2, 31.0], [36.3, 31.0], [36.4, 31.0], [36.5, 31.0], [36.6, 31.0], [36.7, 31.0], [36.8, 31.0], [36.9, 31.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 31.0], [37.8, 31.0], [37.9, 31.0], [38.0, 31.0], [38.1, 31.0], [38.2, 31.0], [38.3, 31.0], [38.4, 31.0], [38.5, 31.0], [38.6, 31.0], [38.7, 31.0], [38.8, 31.0], [38.9, 31.0], [39.0, 31.0], [39.1, 32.0], [39.2, 32.0], [39.3, 32.0], [39.4, 32.0], [39.5, 32.0], [39.6, 32.0], [39.7, 32.0], [39.8, 32.0], [39.9, 32.0], [40.0, 32.0], [40.1, 32.0], [40.2, 32.0], [40.3, 32.0], [40.4, 32.0], [40.5, 32.0], [40.6, 32.0], [40.7, 32.0], [40.8, 32.0], [40.9, 32.0], [41.0, 32.0], [41.1, 32.0], [41.2, 32.0], [41.3, 32.0], [41.4, 32.0], [41.5, 32.0], [41.6, 32.0], [41.7, 32.0], [41.8, 32.0], [41.9, 32.0], [42.0, 32.0], [42.1, 32.0], [42.2, 32.0], [42.3, 32.0], [42.4, 32.0], [42.5, 32.0], [42.6, 32.0], [42.7, 32.0], [42.8, 32.0], [42.9, 32.0], [43.0, 32.0], [43.1, 32.0], [43.2, 32.0], [43.3, 32.0], [43.4, 32.0], [43.5, 32.0], [43.6, 32.0], [43.7, 32.0], [43.8, 32.0], [43.9, 32.0], [44.0, 32.0], [44.1, 32.0], [44.2, 33.0], [44.3, 33.0], [44.4, 33.0], [44.5, 33.0], [44.6, 33.0], [44.7, 33.0], [44.8, 33.0], [44.9, 33.0], [45.0, 33.0], [45.1, 33.0], [45.2, 33.0], [45.3, 33.0], [45.4, 33.0], [45.5, 33.0], [45.6, 33.0], [45.7, 33.0], [45.8, 33.0], [45.9, 33.0], [46.0, 33.0], [46.1, 33.0], [46.2, 33.0], [46.3, 33.0], [46.4, 33.0], [46.5, 33.0], [46.6, 33.0], [46.7, 33.0], [46.8, 33.0], [46.9, 33.0], [47.0, 33.0], [47.1, 33.0], [47.2, 33.0], [47.3, 33.0], [47.4, 33.0], [47.5, 33.0], [47.6, 33.0], [47.7, 33.0], [47.8, 33.0], [47.9, 33.0], [48.0, 33.0], [48.1, 33.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 34.0], [48.6, 34.0], [48.7, 34.0], [48.8, 34.0], [48.9, 34.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 34.0], [49.9, 34.0], [50.0, 34.0], [50.1, 34.0], [50.2, 34.0], [50.3, 34.0], [50.4, 34.0], [50.5, 34.0], [50.6, 34.0], [50.7, 34.0], [50.8, 34.0], [50.9, 34.0], [51.0, 34.0], [51.1, 34.0], [51.2, 34.0], [51.3, 34.0], [51.4, 34.0], [51.5, 34.0], [51.6, 34.0], [51.7, 34.0], [51.8, 34.0], [51.9, 34.0], [52.0, 35.0], [52.1, 35.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 35.0], [52.7, 35.0], [52.8, 35.0], [52.9, 35.0], [53.0, 35.0], [53.1, 35.0], [53.2, 35.0], [53.3, 35.0], [53.4, 35.0], [53.5, 35.0], [53.6, 35.0], [53.7, 35.0], [53.8, 35.0], [53.9, 35.0], [54.0, 35.0], [54.1, 35.0], [54.2, 35.0], [54.3, 35.0], [54.4, 35.0], [54.5, 35.0], [54.6, 35.0], [54.7, 36.0], [54.8, 36.0], [54.9, 36.0], [55.0, 36.0], [55.1, 36.0], [55.2, 36.0], [55.3, 36.0], [55.4, 36.0], [55.5, 36.0], [55.6, 36.0], [55.7, 36.0], [55.8, 36.0], [55.9, 36.0], [56.0, 36.0], [56.1, 36.0], [56.2, 36.0], [56.3, 36.0], [56.4, 36.0], [56.5, 36.0], [56.6, 36.0], [56.7, 36.0], [56.8, 36.0], [56.9, 37.0], [57.0, 37.0], [57.1, 37.0], [57.2, 37.0], [57.3, 37.0], [57.4, 37.0], [57.5, 37.0], [57.6, 37.0], [57.7, 37.0], [57.8, 37.0], [57.9, 37.0], [58.0, 37.0], [58.1, 37.0], [58.2, 37.0], [58.3, 37.0], [58.4, 37.0], [58.5, 37.0], [58.6, 37.0], [58.7, 37.0], [58.8, 38.0], [58.9, 38.0], [59.0, 38.0], [59.1, 38.0], [59.2, 38.0], [59.3, 38.0], [59.4, 38.0], [59.5, 38.0], [59.6, 38.0], [59.7, 38.0], [59.8, 38.0], [59.9, 38.0], [60.0, 38.0], [60.1, 38.0], [60.2, 38.0], [60.3, 38.0], [60.4, 38.0], [60.5, 39.0], [60.6, 39.0], [60.7, 39.0], [60.8, 39.0], [60.9, 39.0], [61.0, 39.0], [61.1, 39.0], [61.2, 39.0], [61.3, 39.0], [61.4, 39.0], [61.5, 39.0], [61.6, 39.0], [61.7, 39.0], [61.8, 40.0], [61.9, 40.0], [62.0, 40.0], [62.1, 40.0], [62.2, 40.0], [62.3, 40.0], [62.4, 40.0], [62.5, 40.0], [62.6, 40.0], [62.7, 40.0], [62.8, 40.0], [62.9, 40.0], [63.0, 41.0], [63.1, 41.0], [63.2, 41.0], [63.3, 41.0], [63.4, 41.0], [63.5, 41.0], [63.6, 41.0], [63.7, 41.0], [63.8, 41.0], [63.9, 41.0], [64.0, 42.0], [64.1, 42.0], [64.2, 42.0], [64.3, 42.0], [64.4, 42.0], [64.5, 42.0], [64.6, 42.0], [64.7, 43.0], [64.8, 43.0], [64.9, 43.0], [65.0, 43.0], [65.1, 43.0], [65.2, 43.0], [65.3, 43.0], [65.4, 44.0], [65.5, 44.0], [65.6, 44.0], [65.7, 44.0], [65.8, 44.0], [65.9, 44.0], [66.0, 45.0], [66.1, 45.0], [66.2, 45.0], [66.3, 45.0], [66.4, 45.0], [66.5, 45.0], [66.6, 46.0], [66.7, 46.0], [66.8, 46.0], [66.9, 47.0], [67.0, 47.0], [67.1, 47.0], [67.2, 47.0], [67.3, 48.0], [67.4, 48.0], [67.5, 48.0], [67.6, 48.0], [67.7, 49.0], [67.8, 49.0], [67.9, 49.0], [68.0, 50.0], [68.1, 50.0], [68.2, 50.0], [68.3, 51.0], [68.4, 51.0], [68.5, 52.0], [68.6, 52.0], [68.7, 53.0], [68.8, 54.0], [68.9, 55.0], [69.0, 56.0], [69.1, 57.0], [69.2, 58.0], [69.3, 60.0], [69.4, 62.0], [69.5, 64.0], [69.6, 64.0], [69.7, 65.0], [69.8, 65.0], [69.9, 65.0], [70.0, 66.0], [70.1, 66.0], [70.2, 67.0], [70.3, 67.0], [70.4, 68.0], [70.5, 68.0], [70.6, 68.0], [70.7, 68.0], [70.8, 69.0], [70.9, 69.0], [71.0, 69.0], [71.1, 69.0], [71.2, 70.0], [71.3, 70.0], [71.4, 70.0], [71.5, 70.0], [71.6, 70.0], [71.7, 71.0], [71.8, 71.0], [71.9, 71.0], [72.0, 71.0], [72.1, 71.0], [72.2, 71.0], [72.3, 72.0], [72.4, 72.0], [72.5, 72.0], [72.6, 72.0], [72.7, 72.0], [72.8, 72.0], [72.9, 73.0], [73.0, 73.0], [73.1, 73.0], [73.2, 73.0], [73.3, 73.0], [73.4, 73.0], [73.5, 74.0], [73.6, 74.0], [73.7, 74.0], [73.8, 74.0], [73.9, 74.0], [74.0, 74.0], [74.1, 75.0], [74.2, 75.0], [74.3, 75.0], [74.4, 75.0], [74.5, 75.0], [74.6, 75.0], [74.7, 75.0], [74.8, 76.0], [74.9, 76.0], [75.0, 76.0], [75.1, 76.0], [75.2, 76.0], [75.3, 76.0], [75.4, 76.0], [75.5, 76.0], [75.6, 76.0], [75.7, 77.0], [75.8, 77.0], [75.9, 77.0], [76.0, 77.0], [76.1, 77.0], [76.2, 77.0], [76.3, 77.0], [76.4, 77.0], [76.5, 77.0], [76.6, 78.0], [76.7, 78.0], [76.8, 78.0], [76.9, 78.0], [77.0, 78.0], [77.1, 78.0], [77.2, 78.0], [77.3, 78.0], [77.4, 78.0], [77.5, 79.0], [77.6, 79.0], [77.7, 79.0], [77.8, 79.0], [77.9, 79.0], [78.0, 79.0], [78.1, 79.0], [78.2, 79.0], [78.3, 79.0], [78.4, 80.0], [78.5, 80.0], [78.6, 80.0], [78.7, 80.0], [78.8, 80.0], [78.9, 80.0], [79.0, 80.0], [79.1, 80.0], [79.2, 80.0], [79.3, 80.0], [79.4, 80.0], [79.5, 81.0], [79.6, 81.0], [79.7, 81.0], [79.8, 81.0], [79.9, 81.0], [80.0, 81.0], [80.1, 81.0], [80.2, 81.0], [80.3, 81.0], [80.4, 81.0], [80.5, 82.0], [80.6, 82.0], [80.7, 82.0], [80.8, 82.0], [80.9, 82.0], [81.0, 82.0], [81.1, 82.0], [81.2, 82.0], [81.3, 82.0], [81.4, 82.0], [81.5, 82.0], [81.6, 82.0], [81.7, 83.0], [81.8, 83.0], [81.9, 83.0], [82.0, 83.0], [82.1, 83.0], [82.2, 83.0], [82.3, 83.0], [82.4, 83.0], [82.5, 83.0], [82.6, 83.0], [82.7, 84.0], [82.8, 84.0], [82.9, 84.0], [83.0, 84.0], [83.1, 84.0], [83.2, 84.0], [83.3, 84.0], [83.4, 84.0], [83.5, 84.0], [83.6, 84.0], [83.7, 84.0], [83.8, 84.0], [83.9, 85.0], [84.0, 85.0], [84.1, 85.0], [84.2, 85.0], [84.3, 85.0], [84.4, 85.0], [84.5, 85.0], [84.6, 85.0], [84.7, 85.0], [84.8, 85.0], [84.9, 85.0], [85.0, 86.0], [85.1, 86.0], [85.2, 86.0], [85.3, 86.0], [85.4, 86.0], [85.5, 86.0], [85.6, 86.0], [85.7, 86.0], [85.8, 86.0], [85.9, 86.0], [86.0, 86.0], [86.1, 87.0], [86.2, 87.0], [86.3, 87.0], [86.4, 87.0], [86.5, 87.0], [86.6, 87.0], [86.7, 87.0], [86.8, 87.0], [86.9, 87.0], [87.0, 87.0], [87.1, 87.0], [87.2, 87.0], [87.3, 88.0], [87.4, 88.0], [87.5, 88.0], [87.6, 88.0], [87.7, 88.0], [87.8, 88.0], [87.9, 88.0], [88.0, 88.0], [88.1, 88.0], [88.2, 88.0], [88.3, 88.0], [88.4, 89.0], [88.5, 89.0], [88.6, 89.0], [88.7, 89.0], [88.8, 89.0], [88.9, 89.0], [89.0, 89.0], [89.1, 89.0], [89.2, 89.0], [89.3, 89.0], [89.4, 90.0], [89.5, 90.0], [89.6, 90.0], [89.7, 90.0], [89.8, 90.0], [89.9, 90.0], [90.0, 90.0], [90.1, 90.0], [90.2, 90.0], [90.3, 90.0], [90.4, 90.0], [90.5, 91.0], [90.6, 91.0], [90.7, 91.0], [90.8, 91.0], [90.9, 91.0], [91.0, 91.0], [91.1, 91.0], [91.2, 91.0], [91.3, 91.0], [91.4, 92.0], [91.5, 92.0], [91.6, 92.0], [91.7, 92.0], [91.8, 92.0], [91.9, 92.0], [92.0, 92.0], [92.1, 92.0], [92.2, 92.0], [92.3, 92.0], [92.4, 93.0], [92.5, 93.0], [92.6, 93.0], [92.7, 93.0], [92.8, 93.0], [92.9, 93.0], [93.0, 93.0], [93.1, 93.0], [93.2, 93.0], [93.3, 94.0], [93.4, 94.0], [93.5, 94.0], [93.6, 94.0], [93.7, 94.0], [93.8, 94.0], [93.9, 94.0], [94.0, 95.0], [94.1, 95.0], [94.2, 95.0], [94.3, 95.0], [94.4, 95.0], [94.5, 95.0], [94.6, 95.0], [94.7, 96.0], [94.8, 96.0], [94.9, 96.0], [95.0, 96.0], [95.1, 96.0], [95.2, 97.0], [95.3, 97.0], [95.4, 97.0], [95.5, 97.0], [95.6, 98.0], [95.7, 98.0], [95.8, 98.0], [95.9, 98.0], [96.0, 99.0], [96.1, 99.0], [96.2, 99.0], [96.3, 100.0], [96.4, 100.0], [96.5, 100.0], [96.6, 101.0], [96.7, 102.0], [96.8, 102.0], [96.9, 102.0], [97.0, 103.0], [97.1, 104.0], [97.2, 104.0], [97.3, 105.0], [97.4, 106.0], [97.5, 106.0], [97.6, 107.0], [97.7, 109.0], [97.8, 111.0], [97.9, 115.0], [98.0, 120.0], [98.1, 134.0], [98.2, 171.0], [98.3, 346.0], [98.4, 358.0], [98.5, 363.0], [98.6, 366.0], [98.7, 369.0], [98.8, 372.0], [98.9, 374.0], [99.0, 377.0], [99.1, 379.0], [99.2, 383.0], [99.3, 390.0], [99.4, 483.0], [99.5, 502.0], [99.6, 578.0], [99.7, 601.0], [99.8, 654.0], [99.9, 955.0]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[0.0, 24.0], [0.1, 25.0], [0.2, 25.0], [0.3, 25.0], [0.4, 25.0], [0.5, 25.0], [0.6, 25.0], [0.7, 25.0], [0.8, 25.0], [0.9, 26.0], [1.0, 26.0], [1.1, 26.0], [1.2, 26.0], [1.3, 26.0], [1.4, 26.0], [1.5, 26.0], [1.6, 26.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 26.0], [2.1, 26.0], [2.2, 26.0], [2.3, 26.0], [2.4, 26.0], [2.5, 26.0], [2.6, 26.0], [2.7, 26.0], [2.8, 26.0], [2.9, 26.0], [3.0, 26.0], [3.1, 26.0], [3.2, 26.0], [3.3, 26.0], [3.4, 26.0], [3.5, 26.0], [3.6, 26.0], [3.7, 26.0], [3.8, 26.0], [3.9, 26.0], [4.0, 26.0], [4.1, 26.0], [4.2, 26.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 27.0], [6.4, 27.0], [6.5, 27.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 27.0], [7.1, 27.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 27.0], [10.4, 27.0], [10.5, 27.0], [10.6, 28.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 28.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 28.0], [15.4, 28.0], [15.5, 28.0], [15.6, 28.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 28.0], [18.4, 28.0], [18.5, 28.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 29.0], [19.7, 29.0], [19.8, 29.0], [19.9, 29.0], [20.0, 29.0], [20.1, 29.0], [20.2, 29.0], [20.3, 29.0], [20.4, 29.0], [20.5, 29.0], [20.6, 29.0], [20.7, 29.0], [20.8, 29.0], [20.9, 29.0], [21.0, 29.0], [21.1, 29.0], [21.2, 29.0], [21.3, 29.0], [21.4, 29.0], [21.5, 29.0], [21.6, 29.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 29.0], [23.1, 29.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 29.0], [23.7, 29.0], [23.8, 29.0], [23.9, 29.0], [24.0, 29.0], [24.1, 29.0], [24.2, 29.0], [24.3, 29.0], [24.4, 29.0], [24.5, 29.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 29.0], [25.2, 29.0], [25.3, 29.0], [25.4, 29.0], [25.5, 29.0], [25.6, 29.0], [25.7, 29.0], [25.8, 29.0], [25.9, 29.0], [26.0, 29.0], [26.1, 29.0], [26.2, 29.0], [26.3, 29.0], [26.4, 30.0], [26.5, 30.0], [26.6, 30.0], [26.7, 30.0], [26.8, 30.0], [26.9, 30.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 30.0], [27.5, 30.0], [27.6, 30.0], [27.7, 30.0], [27.8, 30.0], [27.9, 30.0], [28.0, 30.0], [28.1, 30.0], [28.2, 30.0], [28.3, 30.0], [28.4, 30.0], [28.5, 30.0], [28.6, 30.0], [28.7, 30.0], [28.8, 30.0], [28.9, 30.0], [29.0, 30.0], [29.1, 30.0], [29.2, 30.0], [29.3, 30.0], [29.4, 30.0], [29.5, 30.0], [29.6, 30.0], [29.7, 30.0], [29.8, 30.0], [29.9, 30.0], [30.0, 30.0], [30.1, 30.0], [30.2, 30.0], [30.3, 30.0], [30.4, 30.0], [30.5, 30.0], [30.6, 30.0], [30.7, 30.0], [30.8, 30.0], [30.9, 30.0], [31.0, 30.0], [31.1, 30.0], [31.2, 30.0], [31.3, 30.0], [31.4, 30.0], [31.5, 30.0], [31.6, 30.0], [31.7, 30.0], [31.8, 30.0], [31.9, 30.0], [32.0, 30.0], [32.1, 30.0], [32.2, 30.0], [32.3, 30.0], [32.4, 30.0], [32.5, 30.0], [32.6, 30.0], [32.7, 30.0], [32.8, 30.0], [32.9, 30.0], [33.0, 30.0], [33.1, 30.0], [33.2, 30.0], [33.3, 30.0], [33.4, 30.0], [33.5, 30.0], [33.6, 30.0], [33.7, 31.0], [33.8, 31.0], [33.9, 31.0], [34.0, 31.0], [34.1, 31.0], [34.2, 31.0], [34.3, 31.0], [34.4, 31.0], [34.5, 31.0], [34.6, 31.0], [34.7, 31.0], [34.8, 31.0], [34.9, 31.0], [35.0, 31.0], [35.1, 31.0], [35.2, 31.0], [35.3, 31.0], [35.4, 31.0], [35.5, 31.0], [35.6, 31.0], [35.7, 31.0], [35.8, 31.0], [35.9, 31.0], [36.0, 31.0], [36.1, 31.0], [36.2, 31.0], [36.3, 31.0], [36.4, 31.0], [36.5, 31.0], [36.6, 31.0], [36.7, 31.0], [36.8, 31.0], [36.9, 31.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 31.0], [37.8, 31.0], [37.9, 31.0], [38.0, 31.0], [38.1, 31.0], [38.2, 31.0], [38.3, 31.0], [38.4, 31.0], [38.5, 31.0], [38.6, 31.0], [38.7, 31.0], [38.8, 31.0], [38.9, 31.0], [39.0, 31.0], [39.1, 31.0], [39.2, 31.0], [39.3, 31.0], [39.4, 31.0], [39.5, 31.0], [39.6, 31.0], [39.7, 31.0], [39.8, 31.0], [39.9, 32.0], [40.0, 32.0], [40.1, 32.0], [40.2, 32.0], [40.3, 32.0], [40.4, 32.0], [40.5, 32.0], [40.6, 32.0], [40.7, 32.0], [40.8, 32.0], [40.9, 32.0], [41.0, 32.0], [41.1, 32.0], [41.2, 32.0], [41.3, 32.0], [41.4, 32.0], [41.5, 32.0], [41.6, 32.0], [41.7, 32.0], [41.8, 32.0], [41.9, 32.0], [42.0, 32.0], [42.1, 32.0], [42.2, 32.0], [42.3, 32.0], [42.4, 32.0], [42.5, 32.0], [42.6, 32.0], [42.7, 32.0], [42.8, 32.0], [42.9, 32.0], [43.0, 32.0], [43.1, 32.0], [43.2, 32.0], [43.3, 32.0], [43.4, 32.0], [43.5, 32.0], [43.6, 32.0], [43.7, 32.0], [43.8, 32.0], [43.9, 32.0], [44.0, 32.0], [44.1, 32.0], [44.2, 32.0], [44.3, 32.0], [44.4, 32.0], [44.5, 32.0], [44.6, 32.0], [44.7, 32.0], [44.8, 32.0], [44.9, 33.0], [45.0, 33.0], [45.1, 33.0], [45.2, 33.0], [45.3, 33.0], [45.4, 33.0], [45.5, 33.0], [45.6, 33.0], [45.7, 33.0], [45.8, 33.0], [45.9, 33.0], [46.0, 33.0], [46.1, 33.0], [46.2, 33.0], [46.3, 33.0], [46.4, 33.0], [46.5, 33.0], [46.6, 33.0], [46.7, 33.0], [46.8, 33.0], [46.9, 33.0], [47.0, 33.0], [47.1, 33.0], [47.2, 33.0], [47.3, 33.0], [47.4, 33.0], [47.5, 33.0], [47.6, 33.0], [47.7, 33.0], [47.8, 33.0], [47.9, 33.0], [48.0, 33.0], [48.1, 33.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 33.0], [48.6, 33.0], [48.7, 33.0], [48.8, 33.0], [48.9, 33.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 34.0], [49.9, 34.0], [50.0, 34.0], [50.1, 34.0], [50.2, 34.0], [50.3, 34.0], [50.4, 34.0], [50.5, 34.0], [50.6, 34.0], [50.7, 34.0], [50.8, 34.0], [50.9, 34.0], [51.0, 34.0], [51.1, 34.0], [51.2, 34.0], [51.3, 34.0], [51.4, 34.0], [51.5, 34.0], [51.6, 34.0], [51.7, 34.0], [51.8, 34.0], [51.9, 34.0], [52.0, 34.0], [52.1, 34.0], [52.2, 34.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 35.0], [52.7, 35.0], [52.8, 35.0], [52.9, 35.0], [53.0, 35.0], [53.1, 35.0], [53.2, 35.0], [53.3, 35.0], [53.4, 35.0], [53.5, 35.0], [53.6, 35.0], [53.7, 35.0], [53.8, 35.0], [53.9, 35.0], [54.0, 35.0], [54.1, 35.0], [54.2, 35.0], [54.3, 35.0], [54.4, 35.0], [54.5, 35.0], [54.6, 35.0], [54.7, 35.0], [54.8, 36.0], [54.9, 36.0], [55.0, 36.0], [55.1, 36.0], [55.2, 36.0], [55.3, 36.0], [55.4, 36.0], [55.5, 36.0], [55.6, 36.0], [55.7, 36.0], [55.8, 36.0], [55.9, 36.0], [56.0, 36.0], [56.1, 36.0], [56.2, 36.0], [56.3, 36.0], [56.4, 36.0], [56.5, 36.0], [56.6, 36.0], [56.7, 36.0], [56.8, 36.0], [56.9, 36.0], [57.0, 37.0], [57.1, 37.0], [57.2, 37.0], [57.3, 37.0], [57.4, 37.0], [57.5, 37.0], [57.6, 37.0], [57.7, 37.0], [57.8, 37.0], [57.9, 37.0], [58.0, 37.0], [58.1, 37.0], [58.2, 37.0], [58.3, 37.0], [58.4, 37.0], [58.5, 37.0], [58.6, 37.0], [58.7, 38.0], [58.8, 38.0], [58.9, 38.0], [59.0, 38.0], [59.1, 38.0], [59.2, 38.0], [59.3, 38.0], [59.4, 38.0], [59.5, 38.0], [59.6, 38.0], [59.7, 38.0], [59.8, 38.0], [59.9, 38.0], [60.0, 38.0], [60.1, 39.0], [60.2, 39.0], [60.3, 39.0], [60.4, 39.0], [60.5, 39.0], [60.6, 39.0], [60.7, 39.0], [60.8, 39.0], [60.9, 39.0], [61.0, 39.0], [61.1, 39.0], [61.2, 39.0], [61.3, 39.0], [61.4, 39.0], [61.5, 40.0], [61.6, 40.0], [61.7, 40.0], [61.8, 40.0], [61.9, 40.0], [62.0, 40.0], [62.1, 40.0], [62.2, 40.0], [62.3, 40.0], [62.4, 40.0], [62.5, 40.0], [62.6, 41.0], [62.7, 41.0], [62.8, 41.0], [62.9, 41.0], [63.0, 41.0], [63.1, 41.0], [63.2, 41.0], [63.3, 41.0], [63.4, 41.0], [63.5, 42.0], [63.6, 42.0], [63.7, 42.0], [63.8, 42.0], [63.9, 42.0], [64.0, 42.0], [64.1, 42.0], [64.2, 43.0], [64.3, 43.0], [64.4, 43.0], [64.5, 43.0], [64.6, 43.0], [64.7, 43.0], [64.8, 43.0], [64.9, 43.0], [65.0, 44.0], [65.1, 44.0], [65.2, 44.0], [65.3, 44.0], [65.4, 44.0], [65.5, 45.0], [65.6, 45.0], [65.7, 45.0], [65.8, 45.0], [65.9, 45.0], [66.0, 45.0], [66.1, 46.0], [66.2, 46.0], [66.3, 46.0], [66.4, 46.0], [66.5, 47.0], [66.6, 47.0], [66.7, 47.0], [66.8, 47.0], [66.9, 48.0], [67.0, 48.0], [67.1, 48.0], [67.2, 49.0], [67.3, 49.0], [67.4, 49.0], [67.5, 50.0], [67.6, 50.0], [67.7, 51.0], [67.8, 51.0], [67.9, 52.0], [68.0, 52.0], [68.1, 53.0], [68.2, 54.0], [68.3, 55.0], [68.4, 56.0], [68.5, 57.0], [68.6, 59.0], [68.7, 61.0], [68.8, 63.0], [68.9, 64.0], [69.0, 64.0], [69.1, 65.0], [69.2, 65.0], [69.3, 66.0], [69.4, 66.0], [69.5, 66.0], [69.6, 67.0], [69.7, 67.0], [69.8, 68.0], [69.9, 68.0], [70.0, 68.0], [70.1, 68.0], [70.2, 68.0], [70.3, 69.0], [70.4, 69.0], [70.5, 69.0], [70.6, 69.0], [70.7, 70.0], [70.8, 70.0], [70.9, 70.0], [71.0, 70.0], [71.1, 71.0], [71.2, 71.0], [71.3, 71.0], [71.4, 71.0], [71.5, 71.0], [71.6, 71.0], [71.7, 72.0], [71.8, 72.0], [71.9, 72.0], [72.0, 72.0], [72.1, 72.0], [72.2, 72.0], [72.3, 73.0], [72.4, 73.0], [72.5, 73.0], [72.6, 73.0], [72.7, 73.0], [72.8, 73.0], [72.9, 74.0], [73.0, 74.0], [73.1, 74.0], [73.2, 74.0], [73.3, 74.0], [73.4, 74.0], [73.5, 74.0], [73.6, 75.0], [73.7, 75.0], [73.8, 75.0], [73.9, 75.0], [74.0, 75.0], [74.1, 75.0], [74.2, 75.0], [74.3, 76.0], [74.4, 76.0], [74.5, 76.0], [74.6, 76.0], [74.7, 76.0], [74.8, 76.0], [74.9, 76.0], [75.0, 76.0], [75.1, 76.0], [75.2, 77.0], [75.3, 77.0], [75.4, 77.0], [75.5, 77.0], [75.6, 77.0], [75.7, 77.0], [75.8, 77.0], [75.9, 77.0], [76.0, 78.0], [76.1, 78.0], [76.2, 78.0], [76.3, 78.0], [76.4, 78.0], [76.5, 78.0], [76.6, 78.0], [76.7, 78.0], [76.8, 78.0], [76.9, 79.0], [77.0, 79.0], [77.1, 79.0], [77.2, 79.0], [77.3, 79.0], [77.4, 79.0], [77.5, 79.0], [77.6, 79.0], [77.7, 80.0], [77.8, 80.0], [77.9, 80.0], [78.0, 80.0], [78.1, 80.0], [78.2, 80.0], [78.3, 80.0], [78.4, 80.0], [78.5, 80.0], [78.6, 80.0], [78.7, 80.0], [78.8, 81.0], [78.9, 81.0], [79.0, 81.0], [79.1, 81.0], [79.2, 81.0], [79.3, 81.0], [79.4, 81.0], [79.5, 81.0], [79.6, 81.0], [79.7, 81.0], [79.8, 82.0], [79.9, 82.0], [80.0, 82.0], [80.1, 82.0], [80.2, 82.0], [80.3, 82.0], [80.4, 82.0], [80.5, 82.0], [80.6, 82.0], [80.7, 82.0], [80.8, 83.0], [80.9, 83.0], [81.0, 83.0], [81.1, 83.0], [81.2, 83.0], [81.3, 83.0], [81.4, 83.0], [81.5, 83.0], [81.6, 83.0], [81.7, 83.0], [81.8, 84.0], [81.9, 84.0], [82.0, 84.0], [82.1, 84.0], [82.2, 84.0], [82.3, 84.0], [82.4, 84.0], [82.5, 84.0], [82.6, 84.0], [82.7, 84.0], [82.8, 84.0], [82.9, 84.0], [83.0, 84.0], [83.1, 85.0], [83.2, 85.0], [83.3, 85.0], [83.4, 85.0], [83.5, 85.0], [83.6, 85.0], [83.7, 85.0], [83.8, 85.0], [83.9, 85.0], [84.0, 85.0], [84.1, 86.0], [84.2, 86.0], [84.3, 86.0], [84.4, 86.0], [84.5, 86.0], [84.6, 86.0], [84.7, 86.0], [84.8, 86.0], [84.9, 86.0], [85.0, 86.0], [85.1, 86.0], [85.2, 87.0], [85.3, 87.0], [85.4, 87.0], [85.5, 87.0], [85.6, 87.0], [85.7, 87.0], [85.8, 87.0], [85.9, 87.0], [86.0, 87.0], [86.1, 87.0], [86.2, 87.0], [86.3, 88.0], [86.4, 88.0], [86.5, 88.0], [86.6, 88.0], [86.7, 88.0], [86.8, 88.0], [86.9, 88.0], [87.0, 88.0], [87.1, 88.0], [87.2, 88.0], [87.3, 88.0], [87.4, 88.0], [87.5, 89.0], [87.6, 89.0], [87.7, 89.0], [87.8, 89.0], [87.9, 89.0], [88.0, 89.0], [88.1, 89.0], [88.2, 89.0], [88.3, 89.0], [88.4, 89.0], [88.5, 90.0], [88.6, 90.0], [88.7, 90.0], [88.8, 90.0], [88.9, 90.0], [89.0, 90.0], [89.1, 90.0], [89.2, 90.0], [89.3, 90.0], [89.4, 90.0], [89.5, 91.0], [89.6, 91.0], [89.7, 91.0], [89.8, 91.0], [89.9, 91.0], [90.0, 91.0], [90.1, 91.0], [90.2, 91.0], [90.3, 91.0], [90.4, 91.0], [90.5, 92.0], [90.6, 92.0], [90.7, 92.0], [90.8, 92.0], [90.9, 92.0], [91.0, 92.0], [91.1, 92.0], [91.2, 92.0], [91.3, 92.0], [91.4, 93.0], [91.5, 93.0], [91.6, 93.0], [91.7, 93.0], [91.8, 93.0], [91.9, 93.0], [92.0, 93.0], [92.1, 93.0], [92.2, 94.0], [92.3, 94.0], [92.4, 94.0], [92.5, 94.0], [92.6, 94.0], [92.7, 94.0], [92.8, 94.0], [92.9, 95.0], [93.0, 95.0], [93.1, 95.0], [93.2, 95.0], [93.3, 95.0], [93.4, 95.0], [93.5, 96.0], [93.6, 96.0], [93.7, 96.0], [93.8, 96.0], [93.9, 96.0], [94.0, 96.0], [94.1, 97.0], [94.2, 97.0], [94.3, 97.0], [94.4, 97.0], [94.5, 97.0], [94.6, 98.0], [94.7, 98.0], [94.8, 98.0], [94.9, 98.0], [95.0, 99.0], [95.1, 99.0], [95.2, 99.0], [95.3, 99.0], [95.4, 100.0], [95.5, 100.0], [95.6, 101.0], [95.7, 101.0], [95.8, 101.0], [95.9, 102.0], [96.0, 102.0], [96.1, 103.0], [96.2, 103.0], [96.3, 104.0], [96.4, 105.0], [96.5, 105.0], [96.6, 107.0], [96.7, 108.0], [96.8, 109.0], [96.9, 110.0], [97.0, 111.0], [97.1, 113.0], [97.2, 116.0], [97.3, 121.0], [97.4, 127.0], [97.5, 133.0], [97.6, 142.0], [97.7, 153.0], [97.8, 171.0], [97.9, 194.0], [98.0, 222.0], [98.1, 238.0], [98.2, 253.0], [98.3, 268.0], [98.4, 322.0], [98.5, 356.0], [98.6, 361.0], [98.7, 364.0], [98.8, 366.0], [98.9, 369.0], [99.0, 371.0], [99.1, 373.0], [99.2, 375.0], [99.3, 377.0], [99.4, 379.0], [99.5, 383.0], [99.6, 389.0], [99.7, 402.0], [99.8, 628.0], [99.9, 829.0]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[0.0, 568.0], [0.1, 571.0], [0.2, 571.0], [0.3, 572.0], [0.4, 572.0], [0.5, 572.0], [0.6, 573.0], [0.7, 573.0], [0.8, 573.0], [0.9, 573.0], [1.0, 573.0], [1.1, 573.0], [1.2, 574.0], [1.3, 574.0], [1.4, 574.0], [1.5, 574.0], [1.6, 574.0], [1.7, 574.0], [1.8, 574.0], [1.9, 574.0], [2.0, 574.0], [2.1, 574.0], [2.2, 574.0], [2.3, 574.0], [2.4, 575.0], [2.5, 575.0], [2.6, 575.0], [2.7, 575.0], [2.8, 575.0], [2.9, 575.0], [3.0, 575.0], [3.1, 575.0], [3.2, 575.0], [3.3, 575.0], [3.4, 575.0], [3.5, 575.0], [3.6, 575.0], [3.7, 575.0], [3.8, 575.0], [3.9, 575.0], [4.0, 575.0], [4.1, 576.0], [4.2, 576.0], [4.3, 576.0], [4.4, 576.0], [4.5, 576.0], [4.6, 576.0], [4.7, 576.0], [4.8, 576.0], [4.9, 576.0], [5.0, 576.0], [5.1, 576.0], [5.2, 576.0], [5.3, 576.0], [5.4, 576.0], [5.5, 576.0], [5.6, 576.0], [5.7, 576.0], [5.8, 576.0], [5.9, 576.0], [6.0, 577.0], [6.1, 577.0], [6.2, 577.0], [6.3, 577.0], [6.4, 577.0], [6.5, 577.0], [6.6, 577.0], [6.7, 577.0], [6.8, 577.0], [6.9, 577.0], [7.0, 577.0], [7.1, 577.0], [7.2, 577.0], [7.3, 577.0], [7.4, 577.0], [7.5, 577.0], [7.6, 577.0], [7.7, 577.0], [7.8, 577.0], [7.9, 577.0], [8.0, 577.0], [8.1, 578.0], [8.2, 578.0], [8.3, 578.0], [8.4, 578.0], [8.5, 578.0], [8.6, 578.0], [8.7, 578.0], [8.8, 578.0], [8.9, 578.0], [9.0, 578.0], [9.1, 578.0], [9.2, 578.0], [9.3, 578.0], [9.4, 578.0], [9.5, 578.0], [9.6, 578.0], [9.7, 578.0], [9.8, 578.0], [9.9, 578.0], [10.0, 578.0], [10.1, 578.0], [10.2, 578.0], [10.3, 579.0], [10.4, 579.0], [10.5, 579.0], [10.6, 579.0], [10.7, 579.0], [10.8, 579.0], [10.9, 579.0], [11.0, 579.0], [11.1, 579.0], [11.2, 579.0], [11.3, 579.0], [11.4, 579.0], [11.5, 579.0], [11.6, 579.0], [11.7, 579.0], [11.8, 579.0], [11.9, 579.0], [12.0, 579.0], [12.1, 579.0], [12.2, 579.0], [12.3, 580.0], [12.4, 580.0], [12.5, 580.0], [12.6, 580.0], [12.7, 580.0], [12.8, 580.0], [12.9, 580.0], [13.0, 580.0], [13.1, 580.0], [13.2, 580.0], [13.3, 580.0], [13.4, 580.0], [13.5, 580.0], [13.6, 580.0], [13.7, 580.0], [13.8, 580.0], [13.9, 580.0], [14.0, 580.0], [14.1, 581.0], [14.2, 581.0], [14.3, 581.0], [14.4, 581.0], [14.5, 581.0], [14.6, 581.0], [14.7, 581.0], [14.8, 581.0], [14.9, 581.0], [15.0, 581.0], [15.1, 581.0], [15.2, 581.0], [15.3, 581.0], [15.4, 581.0], [15.5, 581.0], [15.6, 581.0], [15.7, 582.0], [15.8, 582.0], [15.9, 582.0], [16.0, 582.0], [16.1, 582.0], [16.2, 582.0], [16.3, 582.0], [16.4, 582.0], [16.5, 582.0], [16.6, 582.0], [16.7, 582.0], [16.8, 582.0], [16.9, 582.0], [17.0, 582.0], [17.1, 582.0], [17.2, 583.0], [17.3, 583.0], [17.4, 583.0], [17.5, 583.0], [17.6, 583.0], [17.7, 583.0], [17.8, 583.0], [17.9, 583.0], [18.0, 583.0], [18.1, 583.0], [18.2, 583.0], [18.3, 583.0], [18.4, 583.0], [18.5, 583.0], [18.6, 584.0], [18.7, 584.0], [18.8, 584.0], [18.9, 584.0], [19.0, 584.0], [19.1, 584.0], [19.2, 584.0], [19.3, 584.0], [19.4, 584.0], [19.5, 584.0], [19.6, 584.0], [19.7, 584.0], [19.8, 585.0], [19.9, 585.0], [20.0, 585.0], [20.1, 585.0], [20.2, 585.0], [20.3, 585.0], [20.4, 585.0], [20.5, 585.0], [20.6, 585.0], [20.7, 585.0], [20.8, 585.0], [20.9, 586.0], [21.0, 586.0], [21.1, 586.0], [21.2, 586.0], [21.3, 586.0], [21.4, 586.0], [21.5, 586.0], [21.6, 586.0], [21.7, 586.0], [21.8, 586.0], [21.9, 586.0], [22.0, 586.0], [22.1, 587.0], [22.2, 587.0], [22.3, 587.0], [22.4, 587.0], [22.5, 587.0], [22.6, 587.0], [22.7, 587.0], [22.8, 587.0], [22.9, 587.0], [23.0, 587.0], [23.1, 587.0], [23.2, 588.0], [23.3, 588.0], [23.4, 588.0], [23.5, 588.0], [23.6, 588.0], [23.7, 588.0], [23.8, 588.0], [23.9, 588.0], [24.0, 588.0], [24.1, 588.0], [24.2, 588.0], [24.3, 589.0], [24.4, 589.0], [24.5, 589.0], [24.6, 589.0], [24.7, 589.0], [24.8, 589.0], [24.9, 589.0], [25.0, 589.0], [25.1, 589.0], [25.2, 589.0], [25.3, 590.0], [25.4, 590.0], [25.5, 590.0], [25.6, 590.0], [25.7, 590.0], [25.8, 590.0], [25.9, 590.0], [26.0, 590.0], [26.1, 590.0], [26.2, 590.0], [26.3, 590.0], [26.4, 591.0], [26.5, 591.0], [26.6, 591.0], [26.7, 591.0], [26.8, 591.0], [26.9, 591.0], [27.0, 591.0], [27.1, 591.0], [27.2, 591.0], [27.3, 592.0], [27.4, 592.0], [27.5, 592.0], [27.6, 592.0], [27.7, 592.0], [27.8, 592.0], [27.9, 592.0], [28.0, 592.0], [28.1, 592.0], [28.2, 593.0], [28.3, 593.0], [28.4, 593.0], [28.5, 593.0], [28.6, 593.0], [28.7, 593.0], [28.8, 593.0], [28.9, 593.0], [29.0, 593.0], [29.1, 594.0], [29.2, 594.0], [29.3, 594.0], [29.4, 594.0], [29.5, 594.0], [29.6, 594.0], [29.7, 595.0], [29.8, 595.0], [29.9, 595.0], [30.0, 595.0], [30.1, 595.0], [30.2, 595.0], [30.3, 595.0], [30.4, 596.0], [30.5, 596.0], [30.6, 596.0], [30.7, 596.0], [30.8, 596.0], [30.9, 596.0], [31.0, 596.0], [31.1, 597.0], [31.2, 597.0], [31.3, 597.0], [31.4, 597.0], [31.5, 597.0], [31.6, 597.0], [31.7, 597.0], [31.8, 598.0], [31.9, 598.0], [32.0, 598.0], [32.1, 598.0], [32.2, 598.0], [32.3, 598.0], [32.4, 599.0], [32.5, 599.0], [32.6, 599.0], [32.7, 599.0], [32.8, 599.0], [32.9, 599.0], [33.0, 599.0], [33.1, 600.0], [33.2, 600.0], [33.3, 600.0], [33.4, 600.0], [33.5, 600.0], [33.6, 601.0], [33.7, 601.0], [33.8, 601.0], [33.9, 601.0], [34.0, 601.0], [34.1, 601.0], [34.2, 602.0], [34.3, 602.0], [34.4, 602.0], [34.5, 602.0], [34.6, 603.0], [34.7, 603.0], [34.8, 603.0], [34.9, 603.0], [35.0, 604.0], [35.1, 604.0], [35.2, 604.0], [35.3, 604.0], [35.4, 605.0], [35.5, 605.0], [35.6, 606.0], [35.7, 606.0], [35.8, 606.0], [35.9, 607.0], [36.0, 607.0], [36.1, 607.0], [36.2, 608.0], [36.3, 608.0], [36.4, 609.0], [36.5, 609.0], [36.6, 610.0], [36.7, 610.0], [36.8, 611.0], [36.9, 611.0], [37.0, 611.0], [37.1, 612.0], [37.2, 612.0], [37.3, 612.0], [37.4, 612.0], [37.5, 613.0], [37.6, 613.0], [37.7, 613.0], [37.8, 613.0], [37.9, 613.0], [38.0, 613.0], [38.1, 613.0], [38.2, 613.0], [38.3, 614.0], [38.4, 614.0], [38.5, 614.0], [38.6, 614.0], [38.7, 614.0], [38.8, 614.0], [38.9, 614.0], [39.0, 614.0], [39.1, 614.0], [39.2, 614.0], [39.3, 614.0], [39.4, 614.0], [39.5, 614.0], [39.6, 615.0], [39.7, 615.0], [39.8, 615.0], [39.9, 615.0], [40.0, 615.0], [40.1, 615.0], [40.2, 615.0], [40.3, 615.0], [40.4, 615.0], [40.5, 615.0], [40.6, 615.0], [40.7, 615.0], [40.8, 615.0], [40.9, 615.0], [41.0, 615.0], [41.1, 615.0], [41.2, 616.0], [41.3, 616.0], [41.4, 616.0], [41.5, 616.0], [41.6, 616.0], [41.7, 616.0], [41.8, 616.0], [41.9, 616.0], [42.0, 616.0], [42.1, 616.0], [42.2, 616.0], [42.3, 616.0], [42.4, 616.0], [42.5, 616.0], [42.6, 616.0], [42.7, 616.0], [42.8, 616.0], [42.9, 617.0], [43.0, 617.0], [43.1, 617.0], [43.2, 617.0], [43.3, 617.0], [43.4, 617.0], [43.5, 617.0], [43.6, 617.0], [43.7, 617.0], [43.8, 617.0], [43.9, 617.0], [44.0, 617.0], [44.1, 617.0], [44.2, 617.0], [44.3, 617.0], [44.4, 617.0], [44.5, 617.0], [44.6, 617.0], [44.7, 618.0], [44.8, 618.0], [44.9, 618.0], [45.0, 618.0], [45.1, 618.0], [45.2, 618.0], [45.3, 618.0], [45.4, 618.0], [45.5, 618.0], [45.6, 618.0], [45.7, 618.0], [45.8, 618.0], [45.9, 618.0], [46.0, 618.0], [46.1, 618.0], [46.2, 618.0], [46.3, 618.0], [46.4, 619.0], [46.5, 619.0], [46.6, 619.0], [46.7, 619.0], [46.8, 619.0], [46.9, 619.0], [47.0, 619.0], [47.1, 619.0], [47.2, 619.0], [47.3, 619.0], [47.4, 619.0], [47.5, 619.0], [47.6, 619.0], [47.7, 619.0], [47.8, 619.0], [47.9, 620.0], [48.0, 620.0], [48.1, 620.0], [48.2, 620.0], [48.3, 620.0], [48.4, 620.0], [48.5, 620.0], [48.6, 620.0], [48.7, 620.0], [48.8, 620.0], [48.9, 620.0], [49.0, 620.0], [49.1, 620.0], [49.2, 620.0], [49.3, 620.0], [49.4, 621.0], [49.5, 621.0], [49.6, 621.0], [49.7, 621.0], [49.8, 621.0], [49.9, 621.0], [50.0, 621.0], [50.1, 621.0], [50.2, 621.0], [50.3, 621.0], [50.4, 621.0], [50.5, 621.0], [50.6, 621.0], [50.7, 622.0], [50.8, 622.0], [50.9, 622.0], [51.0, 622.0], [51.1, 622.0], [51.2, 622.0], [51.3, 622.0], [51.4, 622.0], [51.5, 622.0], [51.6, 622.0], [51.7, 622.0], [51.8, 623.0], [51.9, 623.0], [52.0, 623.0], [52.1, 623.0], [52.2, 623.0], [52.3, 623.0], [52.4, 623.0], [52.5, 623.0], [52.6, 623.0], [52.7, 623.0], [52.8, 624.0], [52.9, 624.0], [53.0, 624.0], [53.1, 624.0], [53.2, 624.0], [53.3, 624.0], [53.4, 624.0], [53.5, 624.0], [53.6, 624.0], [53.7, 624.0], [53.8, 625.0], [53.9, 625.0], [54.0, 625.0], [54.1, 625.0], [54.2, 625.0], [54.3, 625.0], [54.4, 625.0], [54.5, 625.0], [54.6, 625.0], [54.7, 626.0], [54.8, 626.0], [54.9, 626.0], [55.0, 626.0], [55.1, 626.0], [55.2, 626.0], [55.3, 626.0], [55.4, 626.0], [55.5, 626.0], [55.6, 627.0], [55.7, 627.0], [55.8, 627.0], [55.9, 627.0], [56.0, 627.0], [56.1, 627.0], [56.2, 627.0], [56.3, 627.0], [56.4, 628.0], [56.5, 628.0], [56.6, 628.0], [56.7, 628.0], [56.8, 628.0], [56.9, 628.0], [57.0, 628.0], [57.1, 628.0], [57.2, 629.0], [57.3, 629.0], [57.4, 629.0], [57.5, 629.0], [57.6, 629.0], [57.7, 629.0], [57.8, 629.0], [57.9, 630.0], [58.0, 630.0], [58.1, 630.0], [58.2, 630.0], [58.3, 630.0], [58.4, 630.0], [58.5, 630.0], [58.6, 630.0], [58.7, 631.0], [58.8, 631.0], [58.9, 631.0], [59.0, 631.0], [59.1, 631.0], [59.2, 631.0], [59.3, 632.0], [59.4, 632.0], [59.5, 632.0], [59.6, 632.0], [59.7, 632.0], [59.8, 632.0], [59.9, 632.0], [60.0, 632.0], [60.1, 633.0], [60.2, 633.0], [60.3, 633.0], [60.4, 633.0], [60.5, 633.0], [60.6, 633.0], [60.7, 633.0], [60.8, 634.0], [60.9, 634.0], [61.0, 634.0], [61.1, 634.0], [61.2, 634.0], [61.3, 634.0], [61.4, 634.0], [61.5, 635.0], [61.6, 635.0], [61.7, 635.0], [61.8, 635.0], [61.9, 635.0], [62.0, 635.0], [62.1, 635.0], [62.2, 635.0], [62.3, 636.0], [62.4, 636.0], [62.5, 636.0], [62.6, 636.0], [62.7, 636.0], [62.8, 636.0], [62.9, 636.0], [63.0, 637.0], [63.1, 637.0], [63.2, 637.0], [63.3, 637.0], [63.4, 637.0], [63.5, 637.0], [63.6, 637.0], [63.7, 638.0], [63.8, 638.0], [63.9, 638.0], [64.0, 638.0], [64.1, 638.0], [64.2, 638.0], [64.3, 638.0], [64.4, 639.0], [64.5, 639.0], [64.6, 639.0], [64.7, 639.0], [64.8, 639.0], [64.9, 639.0], [65.0, 639.0], [65.1, 639.0], [65.2, 640.0], [65.3, 640.0], [65.4, 640.0], [65.5, 640.0], [65.6, 640.0], [65.7, 640.0], [65.8, 640.0], [65.9, 641.0], [66.0, 641.0], [66.1, 641.0], [66.2, 641.0], [66.3, 641.0], [66.4, 641.0], [66.5, 641.0], [66.6, 641.0], [66.7, 642.0], [66.8, 642.0], [66.9, 642.0], [67.0, 642.0], [67.1, 642.0], [67.2, 642.0], [67.3, 642.0], [67.4, 643.0], [67.5, 643.0], [67.6, 643.0], [67.7, 643.0], [67.8, 643.0], [67.9, 643.0], [68.0, 643.0], [68.1, 644.0], [68.2, 644.0], [68.3, 644.0], [68.4, 644.0], [68.5, 644.0], [68.6, 644.0], [68.7, 644.0], [68.8, 645.0], [68.9, 645.0], [69.0, 645.0], [69.1, 645.0], [69.2, 645.0], [69.3, 645.0], [69.4, 645.0], [69.5, 646.0], [69.6, 646.0], [69.7, 646.0], [69.8, 646.0], [69.9, 646.0], [70.0, 646.0], [70.1, 646.0], [70.2, 647.0], [70.3, 647.0], [70.4, 647.0], [70.5, 647.0], [70.6, 647.0], [70.7, 647.0], [70.8, 648.0], [70.9, 648.0], [71.0, 648.0], [71.1, 648.0], [71.2, 648.0], [71.3, 649.0], [71.4, 649.0], [71.5, 649.0], [71.6, 649.0], [71.7, 649.0], [71.8, 649.0], [71.9, 650.0], [72.0, 650.0], [72.1, 650.0], [72.2, 650.0], [72.3, 650.0], [72.4, 651.0], [72.5, 651.0], [72.6, 651.0], [72.7, 651.0], [72.8, 651.0], [72.9, 652.0], [73.0, 652.0], [73.1, 652.0], [73.2, 652.0], [73.3, 652.0], [73.4, 653.0], [73.5, 653.0], [73.6, 653.0], [73.7, 653.0], [73.8, 653.0], [73.9, 654.0], [74.0, 654.0], [74.1, 654.0], [74.2, 654.0], [74.3, 655.0], [74.4, 655.0], [74.5, 655.0], [74.6, 655.0], [74.7, 656.0], [74.8, 656.0], [74.9, 656.0], [75.0, 657.0], [75.1, 657.0], [75.2, 657.0], [75.3, 657.0], [75.4, 658.0], [75.5, 658.0], [75.6, 658.0], [75.7, 658.0], [75.8, 659.0], [75.9, 659.0], [76.0, 659.0], [76.1, 659.0], [76.2, 660.0], [76.3, 660.0], [76.4, 660.0], [76.5, 660.0], [76.6, 660.0], [76.7, 661.0], [76.8, 661.0], [76.9, 661.0], [77.0, 661.0], [77.1, 662.0], [77.2, 662.0], [77.3, 662.0], [77.4, 663.0], [77.5, 663.0], [77.6, 663.0], [77.7, 664.0], [77.8, 664.0], [77.9, 664.0], [78.0, 664.0], [78.1, 665.0], [78.2, 665.0], [78.3, 665.0], [78.4, 665.0], [78.5, 666.0], [78.6, 666.0], [78.7, 666.0], [78.8, 666.0], [78.9, 667.0], [79.0, 667.0], [79.1, 667.0], [79.2, 667.0], [79.3, 668.0], [79.4, 668.0], [79.5, 668.0], [79.6, 668.0], [79.7, 669.0], [79.8, 669.0], [79.9, 669.0], [80.0, 669.0], [80.1, 669.0], [80.2, 670.0], [80.3, 670.0], [80.4, 670.0], [80.5, 670.0], [80.6, 671.0], [80.7, 671.0], [80.8, 671.0], [80.9, 671.0], [81.0, 672.0], [81.1, 672.0], [81.2, 672.0], [81.3, 672.0], [81.4, 672.0], [81.5, 673.0], [81.6, 673.0], [81.7, 673.0], [81.8, 674.0], [81.9, 674.0], [82.0, 674.0], [82.1, 674.0], [82.2, 674.0], [82.3, 675.0], [82.4, 675.0], [82.5, 675.0], [82.6, 675.0], [82.7, 676.0], [82.8, 676.0], [82.9, 676.0], [83.0, 676.0], [83.1, 676.0], [83.2, 677.0], [83.3, 677.0], [83.4, 677.0], [83.5, 677.0], [83.6, 678.0], [83.7, 678.0], [83.8, 678.0], [83.9, 678.0], [84.0, 678.0], [84.1, 679.0], [84.2, 679.0], [84.3, 679.0], [84.4, 679.0], [84.5, 680.0], [84.6, 680.0], [84.7, 680.0], [84.8, 680.0], [84.9, 680.0], [85.0, 681.0], [85.1, 681.0], [85.2, 681.0], [85.3, 681.0], [85.4, 681.0], [85.5, 682.0], [85.6, 682.0], [85.7, 682.0], [85.8, 682.0], [85.9, 683.0], [86.0, 683.0], [86.1, 683.0], [86.2, 683.0], [86.3, 684.0], [86.4, 684.0], [86.5, 684.0], [86.6, 684.0], [86.7, 685.0], [86.8, 685.0], [86.9, 685.0], [87.0, 686.0], [87.1, 686.0], [87.2, 686.0], [87.3, 687.0], [87.4, 687.0], [87.5, 687.0], [87.6, 687.0], [87.7, 688.0], [87.8, 688.0], [87.9, 688.0], [88.0, 689.0], [88.1, 689.0], [88.2, 689.0], [88.3, 690.0], [88.4, 690.0], [88.5, 691.0], [88.6, 691.0], [88.7, 692.0], [88.8, 692.0], [88.9, 693.0], [89.0, 693.0], [89.1, 694.0], [89.2, 695.0], [89.3, 695.0], [89.4, 696.0], [89.5, 696.0], [89.6, 697.0], [89.7, 698.0], [89.8, 699.0], [89.9, 699.0], [90.0, 700.0], [90.1, 701.0], [90.2, 702.0], [90.3, 704.0], [90.4, 705.0], [90.5, 706.0], [90.6, 707.0], [90.7, 708.0], [90.8, 709.0], [90.9, 711.0], [91.0, 712.0], [91.1, 714.0], [91.2, 715.0], [91.3, 716.0], [91.4, 718.0], [91.5, 719.0], [91.6, 720.0], [91.7, 721.0], [91.8, 722.0], [91.9, 724.0], [92.0, 726.0], [92.1, 727.0], [92.2, 728.0], [92.3, 730.0], [92.4, 732.0], [92.5, 734.0], [92.6, 736.0], [92.7, 738.0], [92.8, 740.0], [92.9, 742.0], [93.0, 744.0], [93.1, 746.0], [93.2, 749.0], [93.3, 751.0], [93.4, 754.0], [93.5, 755.0], [93.6, 757.0], [93.7, 759.0], [93.8, 761.0], [93.9, 763.0], [94.0, 765.0], [94.1, 767.0], [94.2, 769.0], [94.3, 771.0], [94.4, 773.0], [94.5, 775.0], [94.6, 778.0], [94.7, 780.0], [94.8, 783.0], [94.9, 785.0], [95.0, 787.0], [95.1, 790.0], [95.2, 793.0], [95.3, 796.0], [95.4, 798.0], [95.5, 800.0], [95.6, 802.0], [95.7, 805.0], [95.8, 807.0], [95.9, 809.0], [96.0, 811.0], [96.1, 815.0], [96.2, 818.0], [96.3, 821.0], [96.4, 824.0], [96.5, 830.0], [96.6, 834.0], [96.7, 838.0], [96.8, 843.0], [96.9, 847.0], [97.0, 852.0], [97.1, 857.0], [97.2, 863.0], [97.3, 867.0], [97.4, 872.0], [97.5, 875.0], [97.6, 880.0], [97.7, 885.0], [97.8, 889.0], [97.9, 895.0], [98.0, 900.0], [98.1, 905.0], [98.2, 910.0], [98.3, 915.0], [98.4, 918.0], [98.5, 921.0], [98.6, 924.0], [98.7, 927.0], [98.8, 931.0], [98.9, 934.0], [99.0, 937.0], [99.1, 942.0], [99.2, 948.0], [99.3, 954.0], [99.4, 960.0], [99.5, 966.0], [99.6, 972.0], [99.7, 981.0], [99.8, 1213.0], [99.9, 1532.0]], "isOverall": false, "label": "Register User", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 34136.0, "series": [{"data": [[0.0, 34136.0], [2200.0, 1.0], [2300.0, 1.0], [600.0, 55.0], [700.0, 6.0], [12500.0, 1.0], [200.0, 16.0], [800.0, 1.0], [900.0, 27.0], [1000.0, 8.0], [1100.0, 5.0], [4500.0, 1.0], [300.0, 379.0], [1200.0, 1.0], [100.0, 715.0], [400.0, 46.0], [1800.0, 1.0], [500.0, 75.0], [2000.0, 1.0]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[0.0, 33814.0], [2100.0, 1.0], [600.0, 32.0], [700.0, 6.0], [200.0, 166.0], [800.0, 1.0], [900.0, 14.0], [1000.0, 1.0], [4200.0, 1.0], [1100.0, 1.0], [300.0, 461.0], [1200.0, 15.0], [100.0, 926.0], [400.0, 22.0], [1800.0, 1.0], [500.0, 17.0], [2000.0, 1.0]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[2300.0, 1.0], [600.0, 20178.0], [2400.0, 1.0], [2600.0, 1.0], [700.0, 1966.0], [2700.0, 3.0], [2900.0, 1.0], [800.0, 890.0], [900.0, 629.0], [1000.0, 17.0], [1200.0, 24.0], [1300.0, 3.0], [1400.0, 4.0], [1500.0, 28.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [500.0, 11707.0]], "isOverall": false, "label": "Register User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 70682.0, "series": [{"data": [[0.0, 70682.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32080.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3652.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 71.5075587005469, "minX": 1.7192973E12, "maxY": 100.0, "series": [{"data": [[1.71929736E12, 100.0], [1.71929754E12, 100.0], [1.71929742E12, 100.0], [1.7192976E12, 98.26715063520862], [1.7192973E12, 71.5075587005469], [1.71929748E12, 100.0]], "isOverall": false, "label": "Workload Config", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7192976E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 51.05045297867765, "minX": 1.0, "maxY": 12501.0, "series": [{"data": [[2.0, 377.0], [3.0, 94.0], [4.0, 90.0], [5.0, 396.5], [6.0, 250.24999999999997], [7.0, 84.5], [8.0, 70.0], [9.0, 137.71428571428572], [10.0, 228.5], [11.0, 83.14285714285714], [12.0, 165.14285714285714], [13.0, 132.5], [14.0, 86.71428571428571], [15.0, 159.5], [16.0, 137.81818181818184], [17.0, 89.25], [18.0, 138.0], [19.0, 84.16666666666667], [20.0, 85.46153846153847], [21.0, 143.9], [22.0, 80.0], [23.0, 79.375], [24.0, 168.0555555555556], [25.0, 127.42857142857142], [26.0, 86.58823529411765], [27.0, 154.41666666666669], [28.0, 121.46666666666665], [29.0, 211.23809523809524], [30.0, 88.45454545454544], [31.0, 93.05263157894737], [32.0, 103.52380952380952], [33.0, 91.38461538461539], [34.0, 90.5625], [35.0, 143.95000000000002], [36.0, 115.70588235294119], [37.0, 94.74074074074073], [38.0, 83.66666666666667], [39.0, 111.18181818181817], [40.0, 106.39999999999999], [41.0, 101.8181818181818], [42.0, 109.1], [43.0, 86.3103448275862], [44.0, 83.69230769230771], [45.0, 84.99999999999999], [46.0, 95.89285714285715], [47.0, 90.5625], [48.0, 99.55263157894738], [49.0, 82.8], [50.0, 81.58064516129032], [51.0, 86.16666666666669], [52.0, 85.35714285714286], [53.0, 102.45454545454547], [54.0, 85.93103448275863], [55.0, 89.19354838709675], [56.0, 122.62068965517243], [57.0, 112.48387096774194], [58.0, 101.91666666666669], [59.0, 85.84848484848483], [60.0, 84.94444444444444], [61.0, 87.26666666666668], [62.0, 77.84848484848483], [63.0, 84.93103448275865], [64.0, 84.08571428571427], [65.0, 94.71428571428571], [66.0, 100.35714285714288], [67.0, 112.77777777777777], [68.0, 87.75], [69.0, 105.02777777777777], [70.0, 122.04651162790698], [71.0, 81.7878787878788], [72.0, 113.57894736842107], [73.0, 101.46341463414633], [74.0, 148.6052631578947], [75.0, 107.42499999999997], [76.0, 80.58000000000003], [77.0, 89.10810810810811], [78.0, 99.36956521739133], [79.0, 100.10638297872342], [80.0, 87.57142857142856], [81.0, 94.83333333333334], [82.0, 82.69565217391303], [83.0, 112.19047619047619], [84.0, 97.82000000000001], [85.0, 96.02173913043475], [86.0, 83.44897959183675], [87.0, 101.16666666666666], [88.0, 104.03174603174607], [89.0, 80.10256410256409], [90.0, 105.36538461538458], [91.0, 96.36956521739131], [92.0, 135.10344827586206], [93.0, 84.40816326530611], [94.0, 121.87037037037038], [95.0, 88.45454545454545], [96.0, 98.64], [97.0, 93.67307692307693], [98.0, 91.22727272727273], [99.0, 86.17021276595744], [100.0, 51.794612075540705], [1.0, 12501.0]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[97.46699176908318, 55.893759161123384]], "isOverall": false, "label": "Get List Users-Aggregated", "isController": false}, {"data": [[2.0, 256.0], [3.0, 259.0], [4.0, 152.66666666666666], [5.0, 143.33333333333334], [6.0, 227.5], [7.0, 141.0], [8.0, 97.66666666666667], [9.0, 215.99999999999997], [10.0, 89.0], [11.0, 259.71428571428567], [12.0, 104.42857142857143], [13.0, 210.83333333333334], [14.0, 115.0], [15.0, 160.0], [16.0, 146.81818181818187], [17.0, 143.25], [18.0, 109.89999999999999], [19.0, 177.44444444444443], [20.0, 158.83333333333334], [21.0, 103.88888888888889], [22.0, 216.18749999999997], [23.0, 106.27272727272727], [24.0, 127.99999999999999], [25.0, 136.3], [26.0, 119.28571428571428], [27.0, 109.93333333333334], [28.0, 142.57142857142858], [29.0, 181.68749999999997], [30.0, 85.62499999999999], [31.0, 136.33333333333337], [32.0, 107.4761904761905], [33.0, 117.6], [34.0, 101.22222222222221], [35.0, 199.85], [36.0, 91.57894736842107], [37.0, 104.40909090909092], [38.0, 106.40000000000002], [39.0, 99.85000000000001], [40.0, 121.45454545454547], [41.0, 140.00000000000003], [42.0, 95.40909090909092], [43.0, 163.12499999999997], [44.0, 92.37037037037038], [45.0, 141.58823529411765], [46.0, 99.72727272727272], [47.0, 129.66666666666669], [48.0, 146.6315789473684], [49.0, 127.11999999999998], [50.0, 96.07692307692307], [51.0, 114.96551724137929], [52.0, 91.03846153846153], [53.0, 129.972972972973], [54.0, 112.78571428571428], [55.0, 136.64516129032262], [56.0, 98.77777777777777], [57.0, 104.8857142857143], [58.0, 114.08823529411765], [59.0, 98.57142857142857], [60.0, 92.38461538461537], [61.0, 108.10714285714283], [62.0, 84.84848484848484], [63.0, 107.08333333333331], [64.0, 140.9090909090909], [65.0, 92.29032258064514], [66.0, 113.26666666666667], [67.0, 87.52631578947367], [68.0, 98.38235294117646], [69.0, 114.35294117647055], [70.0, 109.13157894736842], [71.0, 135.80555555555551], [72.0, 95.49999999999997], [73.0, 108.82499999999999], [74.0, 110.71111111111111], [75.0, 96.02941176470588], [76.0, 96.48936170212768], [77.0, 111.87804878048783], [78.0, 112.04545454545453], [79.0, 95.08163265306123], [80.0, 111.31111111111112], [81.0, 101.91891891891895], [82.0, 108.47619047619045], [83.0, 121.33333333333334], [84.0, 106.31818181818178], [85.0, 116.05882352941178], [86.0, 130.90740740740745], [87.0, 95.30232558139537], [88.0, 97.0740740740741], [89.0, 97.21428571428571], [90.0, 140.8653846153846], [91.0, 101.36956521739128], [92.0, 82.10000000000002], [93.0, 100.07142857142857], [94.0, 96.26530612244899], [95.0, 93.2264150943396], [96.0, 115.51724137931033], [97.0, 91.89795918367345], [98.0, 118.96774193548391], [99.0, 99.73469387755102], [100.0, 51.05045297867765], [1.0, 304.0]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[97.45524239007892, 55.74633596392378]], "isOverall": false, "label": "Get User By Id-Aggregated", "isController": false}, {"data": [[2.0, 734.0], [3.0, 639.0], [4.0, 699.0], [5.0, 656.0], [6.0, 751.0], [7.0, 709.4285714285714], [8.0, 730.8333333333334], [9.0, 699.75], [10.0, 703.0], [11.0, 693.8333333333333], [12.0, 690.7142857142857], [13.0, 662.6666666666666], [14.0, 655.5454545454546], [15.0, 639.5714285714286], [16.0, 646.75], [17.0, 672.9999999999999], [18.0, 702.8], [19.0, 663.1818181818182], [20.0, 698.6249999999999], [21.0, 663.0], [22.0, 698.5], [23.0, 650.3076923076923], [24.0, 649.7857142857143], [25.0, 669.8], [26.0, 696.7272727272727], [27.0, 714.1111111111111], [28.0, 658.7692307692308], [29.0, 643.5454545454545], [30.0, 671.470588235294], [31.0, 686.8461538461537], [32.0, 699.3157894736843], [33.0, 653.1538461538462], [34.0, 677.9], [35.0, 720.125], [36.0, 675.1111111111111], [37.0, 684.92], [38.0, 656.0625], [39.0, 671.32], [40.0, 674.0000000000002], [41.0, 681.8125], [42.0, 746.5925925925927], [43.0, 675.1052631578946], [44.0, 663.1515151515151], [45.0, 667.6], [46.0, 694.3870967741934], [47.0, 736.9285714285714], [48.0, 663.3636363636364], [49.0, 668.952380952381], [50.0, 667.2999999999998], [51.0, 682.9354838709677], [52.0, 670.8750000000002], [53.0, 660.6756756756756], [54.0, 655.6071428571429], [55.0, 667.5666666666667], [56.0, 658.4545454545456], [57.0, 678.8064516129033], [58.0, 667.2058823529411], [59.0, 666.8928571428572], [60.0, 676.5749999999999], [61.0, 688.2857142857144], [62.0, 742.0882352941177], [63.0, 716.9999999999999], [64.0, 766.5666666666666], [65.0, 758.0588235294118], [66.0, 753.8620689655171], [67.0, 788.8205128205127], [68.0, 755.1666666666666], [69.0, 718.7179487179486], [70.0, 736.9375000000002], [71.0, 758.388888888889], [72.0, 702.9473684210525], [73.0, 665.7837837837839], [74.0, 672.7391304347826], [75.0, 684.4722222222223], [76.0, 701.5869565217392], [77.0, 656.9555555555555], [78.0, 659.9545454545453], [79.0, 657.6086956521739], [80.0, 661.0487804878048], [81.0, 657.3636363636364], [82.0, 672.2978723404256], [83.0, 663.9999999999999], [84.0, 671.1794871794875], [85.0, 701.0377358490567], [86.0, 665.4255319148937], [87.0, 676.2083333333336], [88.0, 651.5434782608696], [89.0, 665.5892857142859], [90.0, 663.0000000000001], [91.0, 684.5918367346936], [92.0, 688.9599999999998], [93.0, 654.2678571428572], [94.0, 675.0800000000002], [95.0, 656.8461538461538], [96.0, 701.7999999999998], [97.0, 658.6199999999997], [98.0, 654.4827586206897], [99.0, 662.1578947368422], [100.0, 635.677207655441]], "isOverall": false, "label": "Register User", "isController": false}, {"data": [[97.4513099636198, 639.3337093544654]], "isOverall": false, "label": "Register User-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11867.9, "minX": 1.7192973E12, "maxY": 489903.48333333334, "series": [{"data": [[1.71929736E12, 374136.68333333335], [1.71929754E12, 441403.65], [1.71929742E12, 452685.11666666664], [1.7192976E12, 51028.933333333334], [1.7192973E12, 174293.75], [1.71929748E12, 489903.48333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71929736E12, 85918.6], [1.71929754E12, 101413.06666666667], [1.71929742E12, 104040.55], [1.7192976E12, 11867.9], [1.7192973E12, 39858.78333333333], [1.71929748E12, 112574.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7192976E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 32.341928251121104, "minX": 1.7192973E12, "maxY": 681.8222003929258, "series": [{"data": [[1.71929736E12, 103.03688769414559], [1.71929754E12, 32.38527809451404], [1.71929742E12, 47.84367674275147], [1.7192976E12, 46.234375], [1.7192973E12, 102.93957800511511], [1.71929748E12, 32.67195706782376]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[1.71929736E12, 99.03184808612421], [1.71929754E12, 32.840131745629556], [1.71929742E12, 47.48141286896374], [1.7192976E12, 32.341928251121104], [1.7192973E12, 113.02766295707487], [1.71929748E12, 32.80887722501135]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[1.71929736E12, 666.4146961987403], [1.71929754E12, 672.5593413552883], [1.71929742E12, 613.4271772699203], [1.7192976E12, 644.4250258531539], [1.7192973E12, 681.8222003929258], [1.71929748E12, 597.3258042436686]], "isOverall": false, "label": "Register User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7192976E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 32.3408071748879, "minX": 1.7192973E12, "maxY": 681.8169613621503, "series": [{"data": [[1.71929736E12, 102.47431302270029], [1.71929754E12, 32.37818320030407], [1.71929742E12, 47.83701418877218], [1.7192976E12, 46.23102678571426], [1.7192973E12, 102.39993606138113], [1.71929748E12, 32.66533455126735]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[1.71929736E12, 99.02825956937777], [1.71929754E12, 32.835824676969864], [1.71929742E12, 47.477707793009685], [1.7192976E12, 32.3408071748879], [1.7192973E12, 113.01717011128778], [1.71929748E12, 32.805111821086314]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[1.71929736E12, 666.4114037713256], [1.71929754E12, 672.5557948068379], [1.71929742E12, 613.4228536133396], [1.7192976E12, 644.4188210961728], [1.7192973E12, 681.8169613621503], [1.71929748E12, 597.3222678530708]], "isOverall": false, "label": "Register User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7192976E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7192973E12, "maxY": 7.899841017488091, "series": [{"data": [[1.71929736E12, 0.20430107526881774], [1.71929754E12, 0.01786393006461427], [1.71929742E12, 0.09216533004318318], [1.7192976E12, 0.0], [1.7192973E12, 0.0], [1.71929748E12, 0.04453071477506289]], "isOverall": false, "label": "Get List Users", "isController": false}, {"data": [[1.71929736E12, 2.6773325358851694], [1.71929754E12, 0.5806941981251607], [1.71929742E12, 0.5063603803877966], [1.7192976E12, 0.0], [1.7192973E12, 7.899841017488091], [1.71929748E12, 0.48094477407576364]], "isOverall": false, "label": "Get User By Id", "isController": false}, {"data": [[1.71929736E12, 0.44343011074528615], [1.71929754E12, 0.016972767574414203], [1.71929742E12, 0.07634342186534877], [1.7192976E12, 0.0], [1.7192973E12, 0.0], [1.71929748E12, 0.031257129819758166]], "isOverall": false, "label": "Register User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7192976E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.7192973E12, "maxY": 1845.0, "series": [{"data": [[1.71929736E12, 1272.0], [1.71929754E12, 963.0], [1.71929742E12, 1126.0], [1.7192976E12, 807.0], [1.7192973E12, 1845.0], [1.71929748E12, 958.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71929736E12, 665.0], [1.71929754E12, 714.0], [1.71929742E12, 618.0], [1.7192976E12, 667.2000000000003], [1.7192973E12, 673.0], [1.71929748E12, 613.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71929736E12, 927.0], [1.71929754E12, 880.0], [1.71929742E12, 678.0], [1.7192976E12, 749.0], [1.7192973E12, 937.1100000000006], [1.71929748E12, 629.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71929736E12, 681.0], [1.71929754E12, 787.0], [1.71929742E12, 629.0], [1.7192976E12, 716.0], [1.7192973E12, 686.0], [1.71929748E12, 619.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71929736E12, 25.0], [1.71929754E12, 23.0], [1.71929742E12, 23.0], [1.7192976E12, 25.0], [1.7192973E12, 61.0], [1.71929748E12, 24.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71929736E12, 91.0], [1.71929754E12, 33.0], [1.71929742E12, 39.0], [1.7192976E12, 34.0], [1.7192973E12, 92.0], [1.71929748E12, 34.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7192976E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 1.0, "maxY": 12501.0, "series": [{"data": [[6.0, 257.5], [12.0, 735.0], [13.0, 101.0], [19.0, 102.0], [25.0, 101.0], [30.0, 98.0], [37.0, 94.5], [48.0, 92.0], [53.0, 91.0], [59.0, 95.0], [62.0, 95.0], [75.0, 90.0], [74.0, 103.0], [85.0, 92.0], [88.0, 93.0], [92.0, 94.5], [104.0, 94.0], [114.0, 95.0], [117.0, 92.0], [123.0, 93.5], [137.0, 93.0], [143.0, 91.0], [138.0, 93.0], [167.0, 90.0], [170.0, 93.0], [173.0, 90.0], [179.0, 91.0], [185.0, 95.0], [191.0, 91.5], [198.0, 94.0], [199.0, 88.0], [197.0, 92.0], [210.0, 91.0], [215.0, 90.0], [233.0, 96.0], [234.0, 91.0], [250.0, 93.0], [269.0, 92.0], [268.0, 41.0], [273.0, 92.0], [275.0, 95.0], [285.0, 93.0], [284.0, 92.0], [287.0, 93.0], [296.0, 93.0], [302.0, 91.5], [317.0, 94.0], [309.0, 93.0], [314.0, 88.0], [313.0, 97.0], [319.0, 89.0], [316.0, 88.0], [318.0, 92.0], [307.0, 91.0], [308.0, 91.0], [323.0, 85.0], [334.0, 93.0], [324.0, 91.0], [329.0, 93.0], [335.0, 93.0], [328.0, 34.0], [320.0, 94.0], [332.0, 90.0], [333.0, 80.0], [321.0, 93.0], [331.0, 91.0], [330.0, 34.0], [326.0, 84.0], [327.0, 32.0], [325.0, 90.0], [339.0, 89.0], [347.0, 89.0], [346.0, 38.0], [343.0, 92.0], [345.0, 88.0], [344.0, 92.0], [351.0, 35.0], [336.0, 87.0], [338.0, 90.0], [340.0, 43.0], [342.0, 33.0], [350.0, 87.0], [349.0, 88.0], [348.0, 33.0], [356.0, 80.0], [365.0, 83.0], [361.0, 88.0], [357.0, 77.0], [359.0, 43.0], [367.0, 38.0], [366.0, 32.0], [380.0, 37.0], [368.0, 90.0], [374.0, 77.0], [375.0, 33.0], [379.0, 82.0], [378.0, 74.5], [373.0, 34.0], [381.0, 32.0], [371.0, 33.0], [369.0, 38.0], [376.0, 40.0], [383.0, 35.0], [397.0, 42.0], [385.0, 80.5], [384.0, 36.0], [392.0, 87.0], [388.0, 83.0], [390.0, 33.0], [395.0, 39.0], [393.0, 36.0], [394.0, 34.0], [396.0, 39.0], [386.0, 37.0], [387.0, 33.0], [391.0, 43.0], [398.0, 68.0], [399.0, 34.0], [400.0, 34.0], [415.0, 38.0], [412.0, 49.0], [408.0, 34.0], [411.0, 32.0], [410.0, 34.0], [407.0, 35.0], [406.0, 36.0], [413.0, 35.0], [404.0, 35.0], [405.0, 33.0], [401.0, 33.0], [402.0, 34.0], [403.0, 32.0], [428.0, 38.0], [426.0, 33.0], [416.0, 32.0], [421.0, 58.0], [420.0, 36.0], [423.0, 34.0], [422.0, 32.0], [425.0, 41.5], [431.0, 32.0], [429.0, 34.0], [430.0, 32.0], [424.0, 33.0], [427.0, 33.0], [418.0, 34.0], [434.0, 35.0], [439.0, 34.0], [438.0, 40.0], [432.0, 34.0], [442.0, 34.0], [443.0, 33.0], [436.0, 34.0], [437.0, 34.0], [441.0, 33.0], [445.0, 35.0], [444.0, 34.0], [446.0, 43.0], [440.0, 32.0], [461.0, 34.0], [453.0, 35.0], [455.0, 33.0], [458.0, 33.0], [460.0, 33.0], [448.0, 32.0], [451.0, 33.0], [462.0, 32.0], [449.0, 34.0], [452.0, 32.0], [473.0, 36.0], [465.0, 38.0], [475.0, 34.0], [471.0, 33.0], [493.0, 40.0], [490.0, 34.0], [481.0, 33.0], [494.0, 34.0], [491.0, 36.0], [497.0, 34.0], [500.0, 37.0], [498.0, 32.0], [515.0, 34.0], [518.0, 33.0], [535.0, 34.0], [514.0, 35.0], [513.0, 33.0], [1.0, 304.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[12.0, 671.5], [25.0, 834.0], [30.0, 785.0], [37.0, 648.0], [48.0, 637.0], [53.0, 671.0], [59.0, 650.5], [62.0, 683.0], [75.0, 663.0], [74.0, 662.0], [85.0, 677.0], [88.0, 1220.0], [92.0, 672.5], [104.0, 715.0], [114.0, 675.0], [117.0, 660.0], [123.0, 653.0], [137.0, 677.0], [143.0, 671.5], [138.0, 655.5], [167.0, 673.0], [170.0, 648.0], [173.0, 673.0], [179.0, 678.0], [185.0, 636.0], [191.0, 643.0], [198.0, 653.0], [199.0, 920.5], [197.0, 1001.5], [210.0, 685.0], [215.0, 790.5], [233.0, 653.0], [234.0, 647.0], [250.0, 644.0], [269.0, 649.0], [268.0, 629.5], [273.0, 644.0], [275.0, 644.5], [285.0, 669.0], [284.0, 665.5], [287.0, 657.0], [296.0, 659.0], [302.0, 648.0], [317.0, 655.0], [309.0, 643.0], [314.0, 679.0], [313.0, 658.0], [319.0, 666.5], [316.0, 673.5], [318.0, 674.0], [307.0, 650.0], [308.0, 643.5], [323.0, 801.0], [334.0, 657.0], [324.0, 643.0], [329.0, 652.0], [335.0, 643.0], [328.0, 774.0], [320.0, 649.5], [332.0, 671.0], [333.0, 734.0], [321.0, 663.0], [331.0, 667.5], [330.0, 899.0], [326.0, 675.5], [327.0, 837.0], [325.0, 667.0], [339.0, 679.0], [347.0, 666.0], [346.0, 612.0], [343.0, 648.0], [345.0, 668.0], [344.0, 652.0], [351.0, 793.0], [336.0, 646.0], [338.0, 645.0], [340.0, 644.0], [342.0, 789.5], [350.0, 641.0], [349.0, 633.0], [348.0, 774.0], [356.0, 639.0], [365.0, 619.0], [361.0, 629.0], [357.0, 610.0], [359.0, 708.5], [367.0, 616.0], [366.0, 598.0], [380.0, 591.0], [368.0, 649.5], [374.0, 670.0], [375.0, 645.0], [379.0, 620.0], [378.0, 615.5], [373.0, 588.0], [381.0, 614.5], [371.0, 666.0], [369.0, 732.0], [376.0, 695.5], [383.0, 739.0], [397.0, 608.0], [385.0, 629.5], [384.0, 626.0], [392.0, 608.0], [388.0, 622.0], [390.0, 670.5], [395.0, 590.0], [393.0, 615.5], [394.0, 660.5], [396.0, 616.0], [386.0, 595.0], [387.0, 696.0], [391.0, 618.0], [398.0, 590.0], [399.0, 596.5], [400.0, 621.0], [415.0, 599.0], [412.0, 641.0], [408.0, 613.0], [411.0, 584.0], [410.0, 624.5], [407.0, 628.5], [406.0, 601.0], [413.0, 600.0], [404.0, 601.0], [405.0, 630.0], [401.0, 621.0], [402.0, 616.5], [403.0, 685.5], [428.0, 593.5], [426.0, 616.0], [416.0, 590.0], [421.0, 622.0], [420.0, 621.0], [423.0, 617.5], [422.0, 582.0], [425.0, 615.0], [431.0, 592.0], [429.0, 596.5], [430.0, 590.0], [424.0, 601.0], [427.0, 591.0], [418.0, 596.0], [434.0, 614.0], [439.0, 593.0], [438.0, 593.0], [432.0, 604.0], [442.0, 609.0], [443.0, 584.0], [436.0, 587.0], [437.0, 611.0], [441.0, 588.0], [445.0, 610.5], [444.0, 594.5], [446.0, 609.5], [440.0, 596.0], [461.0, 595.5], [453.0, 587.5], [455.0, 587.0], [458.0, 591.0], [460.0, 583.0], [448.0, 597.0], [451.0, 586.0], [462.0, 617.0], [449.0, 592.0], [452.0, 586.5], [473.0, 594.0], [465.0, 593.0], [475.0, 587.5], [471.0, 596.0], [493.0, 589.0], [490.0, 611.5], [481.0, 590.0], [494.0, 588.0], [491.0, 592.5], [497.0, 586.0], [500.0, 589.0], [498.0, 594.0], [515.0, 588.5], [518.0, 590.5], [535.0, 604.0], [514.0, 587.0], [513.0, 581.0], [1.0, 12501.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 535.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 1.0, "maxY": 12501.0, "series": [{"data": [[6.0, 257.5], [12.0, 735.0], [13.0, 101.0], [19.0, 102.0], [25.0, 101.0], [30.0, 98.0], [37.0, 94.5], [48.0, 92.0], [53.0, 91.0], [59.0, 95.0], [62.0, 95.0], [75.0, 90.0], [74.0, 103.0], [85.0, 91.0], [88.0, 93.0], [92.0, 94.5], [104.0, 94.0], [114.0, 95.0], [117.0, 92.0], [123.0, 93.5], [137.0, 93.0], [143.0, 91.0], [138.0, 93.0], [167.0, 90.0], [170.0, 93.0], [173.0, 90.0], [179.0, 90.0], [185.0, 95.0], [191.0, 91.5], [198.0, 94.0], [199.0, 88.0], [197.0, 92.0], [210.0, 91.0], [215.0, 90.0], [233.0, 96.0], [234.0, 91.0], [250.0, 93.0], [269.0, 92.0], [268.0, 41.0], [273.0, 92.0], [275.0, 95.0], [285.0, 93.0], [284.0, 92.0], [287.0, 93.0], [296.0, 93.0], [302.0, 91.5], [317.0, 94.0], [309.0, 93.0], [314.0, 88.0], [313.0, 97.0], [319.0, 89.0], [316.0, 88.0], [318.0, 92.0], [307.0, 91.0], [308.0, 91.0], [323.0, 85.0], [334.0, 93.0], [324.0, 91.0], [329.0, 93.0], [335.0, 93.0], [328.0, 34.0], [320.0, 94.0], [332.0, 90.0], [333.0, 80.0], [321.0, 93.0], [331.0, 91.0], [330.0, 34.0], [326.0, 84.0], [327.0, 32.0], [325.0, 90.0], [339.0, 89.0], [347.0, 89.0], [346.0, 38.0], [343.0, 92.0], [345.0, 88.0], [344.0, 92.0], [351.0, 35.0], [336.0, 87.0], [338.0, 90.0], [340.0, 43.0], [342.0, 33.0], [350.0, 87.0], [349.0, 88.0], [348.0, 33.0], [356.0, 80.0], [365.0, 83.0], [361.0, 88.0], [357.0, 77.0], [359.0, 43.0], [367.0, 38.0], [366.0, 32.0], [380.0, 37.0], [368.0, 90.0], [374.0, 77.0], [375.0, 33.0], [379.0, 82.0], [378.0, 74.5], [373.0, 34.0], [381.0, 32.0], [371.0, 33.0], [369.0, 38.0], [376.0, 40.0], [383.0, 35.0], [397.0, 42.0], [385.0, 80.5], [384.0, 36.0], [392.0, 87.0], [388.0, 83.0], [390.0, 33.0], [395.0, 39.0], [393.0, 36.0], [394.0, 34.0], [396.0, 39.0], [386.0, 37.0], [387.0, 33.0], [391.0, 43.0], [398.0, 68.0], [399.0, 34.0], [400.0, 34.0], [415.0, 38.0], [412.0, 49.0], [408.0, 34.0], [411.0, 32.0], [410.0, 34.0], [407.0, 35.0], [406.0, 36.0], [413.0, 35.0], [404.0, 35.0], [405.0, 33.0], [401.0, 33.0], [402.0, 34.0], [403.0, 32.0], [428.0, 38.0], [426.0, 33.0], [416.0, 32.0], [421.0, 58.0], [420.0, 36.0], [423.0, 34.0], [422.0, 32.0], [425.0, 41.5], [431.0, 32.0], [429.0, 34.0], [430.0, 32.0], [424.0, 33.0], [427.0, 33.0], [418.0, 34.0], [434.0, 35.0], [439.0, 34.0], [438.0, 40.0], [432.0, 34.0], [442.0, 34.0], [443.0, 33.0], [436.0, 34.0], [437.0, 34.0], [441.0, 33.0], [445.0, 35.0], [444.0, 34.0], [446.0, 43.0], [440.0, 32.0], [461.0, 34.0], [453.0, 35.0], [455.0, 33.0], [458.0, 33.0], [460.0, 33.0], [448.0, 32.0], [451.0, 33.0], [462.0, 32.0], [449.0, 34.0], [452.0, 32.0], [473.0, 36.0], [465.0, 38.0], [475.0, 34.0], [471.0, 33.0], [493.0, 40.0], [490.0, 34.0], [481.0, 33.0], [494.0, 34.0], [491.0, 36.0], [497.0, 34.0], [500.0, 37.0], [498.0, 32.0], [515.0, 34.0], [518.0, 33.0], [535.0, 34.0], [514.0, 35.0], [513.0, 33.0], [1.0, 304.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[12.0, 671.5], [25.0, 834.0], [30.0, 785.0], [37.0, 648.0], [48.0, 637.0], [53.0, 671.0], [59.0, 650.5], [62.0, 683.0], [75.0, 663.0], [74.0, 662.0], [85.0, 677.0], [88.0, 1220.0], [92.0, 672.5], [104.0, 715.0], [114.0, 675.0], [117.0, 660.0], [123.0, 653.0], [137.0, 677.0], [143.0, 671.0], [138.0, 655.5], [167.0, 673.0], [170.0, 648.0], [173.0, 673.0], [179.0, 678.0], [185.0, 636.0], [191.0, 643.0], [198.0, 653.0], [199.0, 920.5], [197.0, 1001.5], [210.0, 685.0], [215.0, 790.5], [233.0, 653.0], [234.0, 647.0], [250.0, 644.0], [269.0, 649.0], [268.0, 629.5], [273.0, 644.0], [275.0, 644.5], [285.0, 669.0], [284.0, 665.5], [287.0, 657.0], [296.0, 659.0], [302.0, 648.0], [317.0, 655.0], [309.0, 643.0], [314.0, 679.0], [313.0, 658.0], [319.0, 666.5], [316.0, 673.5], [318.0, 674.0], [307.0, 650.0], [308.0, 643.5], [323.0, 801.0], [334.0, 657.0], [324.0, 643.0], [329.0, 652.0], [335.0, 643.0], [328.0, 774.0], [320.0, 649.5], [332.0, 671.0], [333.0, 734.0], [321.0, 663.0], [331.0, 667.5], [330.0, 899.0], [326.0, 675.5], [327.0, 837.0], [325.0, 667.0], [339.0, 679.0], [347.0, 666.0], [346.0, 612.0], [343.0, 648.0], [345.0, 668.0], [344.0, 652.0], [351.0, 793.0], [336.0, 646.0], [338.0, 645.0], [340.0, 644.0], [342.0, 789.5], [350.0, 641.0], [349.0, 633.0], [348.0, 774.0], [356.0, 639.0], [365.0, 619.0], [361.0, 629.0], [357.0, 610.0], [359.0, 708.5], [367.0, 616.0], [366.0, 598.0], [380.0, 591.0], [368.0, 649.5], [374.0, 670.0], [375.0, 645.0], [379.0, 620.0], [378.0, 615.5], [373.0, 588.0], [381.0, 614.5], [371.0, 666.0], [369.0, 732.0], [376.0, 695.5], [383.0, 739.0], [397.0, 608.0], [385.0, 629.5], [384.0, 626.0], [392.0, 608.0], [388.0, 622.0], [390.0, 670.5], [395.0, 590.0], [393.0, 615.5], [394.0, 660.5], [396.0, 616.0], [386.0, 595.0], [387.0, 696.0], [391.0, 618.0], [398.0, 590.0], [399.0, 596.5], [400.0, 621.0], [415.0, 599.0], [412.0, 641.0], [408.0, 613.0], [411.0, 584.0], [410.0, 624.5], [407.0, 628.5], [406.0, 601.0], [413.0, 600.0], [404.0, 601.0], [405.0, 630.0], [401.0, 621.0], [402.0, 616.5], [403.0, 685.5], [428.0, 593.5], [426.0, 616.0], [416.0, 590.0], [421.0, 622.0], [420.0, 621.0], [423.0, 617.5], [422.0, 582.0], [425.0, 615.0], [431.0, 592.0], [429.0, 596.5], [430.0, 590.0], [424.0, 601.0], [427.0, 591.0], [418.0, 596.0], [434.0, 614.0], [439.0, 593.0], [438.0, 593.0], [432.0, 604.0], [442.0, 609.0], [443.0, 584.0], [436.0, 587.0], [437.0, 611.0], [441.0, 588.0], [445.0, 610.5], [444.0, 594.5], [446.0, 609.5], [440.0, 596.0], [461.0, 595.5], [453.0, 587.5], [455.0, 587.0], [458.0, 591.0], [460.0, 583.0], [448.0, 597.0], [451.0, 586.0], [462.0, 617.0], [449.0, 592.0], [452.0, 586.5], [473.0, 594.0], [465.0, 593.0], [475.0, 587.5], [471.0, 596.0], [493.0, 589.0], [490.0, 611.5], [481.0, 590.0], [494.0, 588.0], [491.0, 592.5], [497.0, 586.0], [500.0, 589.0], [498.0, 594.0], [515.0, 588.5], [518.0, 590.5], [535.0, 604.0], [514.0, 587.0], [513.0, 581.0], [1.0, 12501.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 535.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 44.266666666666666, "minX": 1.7192973E12, "maxY": 438.1333333333333, "series": [{"data": [[1.71929736E12, 334.43333333333334], [1.71929754E12, 394.68333333333334], [1.71929742E12, 404.95], [1.7192976E12, 44.266666666666666], [1.7192973E12, 157.11666666666667], [1.71929748E12, 438.1333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7192976E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6, "minX": 1.7192973E12, "maxY": 423.51666666666665, "series": [{"data": [[1.71929736E12, 323.28333333333336], [1.71929754E12, 381.51666666666665], [1.71929742E12, 391.48333333333335], [1.7192976E12, 44.31666666666667], [1.7192973E12, 150.36666666666667], [1.71929748E12, 423.51666666666665]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71929736E12, 11.15], [1.71929754E12, 13.183333333333334], [1.71929742E12, 13.466666666666667], [1.7192976E12, 1.6], [1.7192973E12, 5.083333333333333], [1.71929748E12, 14.616666666666667]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7192976E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7192973E12, "maxY": 146.06666666666666, "series": [{"data": [[1.71929736E12, 11.866666666666667], [1.71929754E12, 13.2], [1.71929742E12, 13.616666666666667], [1.7192976E12, 1.6166666666666667], [1.7192973E12, 5.516666666666667], [1.71929748E12, 14.616666666666667]], "isOverall": false, "label": "Register User-failure", "isController": false}, {"data": [[1.71929736E12, 99.5], [1.71929754E12, 118.38333333333334], [1.71929742E12, 121.3], [1.7192976E12, 14.5], [1.7192973E12, 45.38333333333333], [1.71929748E12, 131.48333333333332]], "isOverall": false, "label": "Register User-success", "isController": false}, {"data": [[1.71929736E12, 111.3], [1.71929754E12, 131.56666666666666], [1.71929742E12, 134.9], [1.7192976E12, 14.866666666666667], [1.7192973E12, 52.28333333333333], [1.71929748E12, 146.06666666666666]], "isOverall": false, "label": "Get User By Id-success", "isController": false}, {"data": [[1.71929736E12, 0.03333333333333333], [1.71929742E12, 0.016666666666666666], [1.7192976E12, 0.016666666666666666], [1.71929748E12, 0.016666666666666666]], "isOverall": false, "label": "Get List Users-failure", "isController": false}, {"data": [[1.71929736E12, 111.56666666666666], [1.71929754E12, 131.55], [1.71929742E12, 135.06666666666666], [1.7192976E12, 14.916666666666666], [1.7192973E12, 52.13333333333333], [1.71929748E12, 145.95]], "isOverall": false, "label": "Get List Users-success", "isController": false}, {"data": [[1.71929736E12, 0.16666666666666666], [1.71929742E12, 0.05], [1.7192973E12, 0.13333333333333333]], "isOverall": false, "label": "Get User By Id-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7192976E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.6333333333333333, "minX": 1.7192973E12, "maxY": 423.5, "series": [{"data": [[1.71929736E12, 322.3666666666667], [1.71929754E12, 381.5], [1.71929742E12, 391.26666666666665], [1.7192976E12, 44.28333333333333], [1.7192973E12, 149.8], [1.71929748E12, 423.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71929736E12, 12.066666666666666], [1.71929754E12, 13.2], [1.71929742E12, 13.683333333333334], [1.7192976E12, 1.6333333333333333], [1.7192973E12, 5.65], [1.71929748E12, 14.633333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7192976E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

